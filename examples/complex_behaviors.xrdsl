; Complex behaviors demonstration - hot-swappable code
; This shows that ANY DSL code can be hot-swapped, not just simple values

; Orbit behavior - objects orbit around a center point
(defbehavior orbit
  (state 
    (angle 0.0)
    (radius 5.0)
    (speed 1.5)
    (height 0.0))
  (update (dt)
    ; Update angle for orbital motion
    (set! angle (+ angle (* speed dt)))
    ; Calculate new position in orbit
    (set! position.x (* radius (cos angle)))
    (set! position.z (* radius (sin angle)))
    (set! position.y height)))

; Wave behavior - creates wave-like motion
(defbehavior wave
  (state 
    (time 0.0)
    (amplitude 2.0)
    (frequency 2.0)
    (base-y 3.0))
  (update (dt)
    (set! time (+ time dt))
    ; Create wave motion on Y axis
    (set! position.y (+ base-y (* amplitude (sin (* time frequency)))))
    ; Rotate based on position  
    (set! rotation.x (* 0.3 (sin (* time 1.5))))
    (set! rotation.z (* 0.2 (cos (* time 1.2))))))

; Pulse behavior - pulsing scale and color changes
(defbehavior pulse
  (state 
    (time 0.0)
    (pulse-rate 3.0)
    (min-scale 0.5)
    (max-scale 1.5))
  (update (dt)
    (set! time (+ time dt))
    ; Calculate pulse value (0 to 1)
    (let ((pulse-value (/ (+ 1.0 (sin (* time pulse-rate))) 2.0)))
      ; Apply to scale
      (let ((scale (+ min-scale (* pulse-value (- max-scale min-scale)))))
        (set! scale.x scale)
        (set! scale.y scale)
        (set! scale.z scale))
      ; Rotate slowly
      (set! rotation.y (* time 0.5)))))

; Complex behavior combining multiple effects
(defbehavior complex
  (state 
    (time 0.0)
    (orbit-radius 3.0)
    (orbit-speed 1.0)
    (bob-amplitude 0.5)
    (bob-frequency 4.0)
    (spin-speed 2.0))
  (update (dt)
    (set! time (+ time dt))
    ; Orbital motion
    (let ((orbit-angle (* time orbit-speed)))
      (set! position.x (* orbit-radius (cos orbit-angle)))
      (set! position.z (* orbit-radius (sin orbit-angle))))
    ; Bobbing motion
    (set! position.y (* bob-amplitude (sin (* time bob-frequency))))
    ; Spinning
    (set! rotation.y (* time spin-speed))
    ; Scale breathing
    (let ((breath (+ 1.0 (* 0.2 (sin (* time 2.0))))))
      (set! scale.x breath)
      (set! scale.y breath)
      (set! scale.z breath))))

(defscene3d complex-demo
  (camera
    (position 0 10 20)
    (target 0 0 0)
    (fov 45))
    
  (lighting
    (ambient 0.3 0.3 0.4)
    (directional
      (direction 1 1 1)
      (color 1.0 0.95 0.9)
      (intensity 1.2)))
  
  ; Orbiting cube
  (object orbit-cube cube
    (position 0 0 0)
    (scale 1 1 1)
    (color 0.8 0.2 0.2)
    (behavior orbit))
    
  ; Waving cube
  (object wave-cube cube
    (position -5 3 0)
    (scale 0.8 0.8 0.8)
    (color 0.2 0.8 0.2)
    (behavior wave))
    
  ; Pulsing cube
  (object pulse-cube cube
    (position 5 1 0)
    (scale 1 1 1)
    (color 0.2 0.2 0.8)
    (behavior pulse))
    
  ; Complex behavior cube
  (object complex-cube cube
    (position 0 0 -3)
    (scale 0.7 0.7 0.7)
    (color 0.8 0.8 0.2)
    (behavior complex))
    
  ; Static reference cube
  (object reference-cube cube
    (position 0 -3 0)
    (scale 2 0.2 2)
    (color 0.5 0.5 0.5))
      
  ; UI showing current state
  (ui-element status-text text
    (position 10 10 0)
    (size 400 100)
    (text "Complex Behaviors Demo\nEdit behaviors to see hot-swap in action!")
    (color 1 1 1 1)))