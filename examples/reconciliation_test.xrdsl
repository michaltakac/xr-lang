;; Test scene for reconciliation system
;; Demonstrates efficient hot-swapping with minimal recompilation
;; 
;; Try modifying different parts of this file and watch the console output
;; to see what gets recompiled vs what gets incrementally updated

(defbehavior spin
  (state (speed 1.0))
  (update (dt)
    (let ((angle (* speed dt)))
      (gpu.entity.rotate-y angle))))

(defbehavior pulse
  (state (time 0.0) (scale 1.0))
  (update (dt)
    (let ((new-time (+ time dt)))
      (set! time new-time)
      (set! scale (+ 1.0 (* 0.3 (sin (* new-time 2.0)))))
      (gpu.entity.scale scale scale scale))))

(defbehavior color-cycle
  (state (time 0.0))
  (update (dt)
    (let ((new-time (+ time dt)))
      (set! time new-time)
      (let ((r (+ 0.5 (* 0.5 (sin new-time))))
            (g (+ 0.5 (* 0.5 (sin (+ new-time 2.0)))))
            (b (+ 0.5 (* 0.5 (sin (+ new-time 4.0))))))
        (gpu.entity.color r g b 1.0)))))

(scene3d reconciliation-test
  ;; Try changing camera position - should update without full rebuild
  (camera
    (position 0.0 5.0 10.0)
    (target 0.0 0.0 0.0)
    (fov 45.0))
  
  ;; Try adding/removing/modifying objects to see reconciliation in action
  (objects
    ;; Spinning cube - try changing position or behavior
    (cube spinning-cube
      (transform
        (position -3.0 0.0 0.0)
        (scale 1.0 1.0 1.0))
      (behavior spin))
    
    ;; Pulsing sphere - try commenting out or changing scale
    (sphere pulsing-sphere
      (transform
        (position 0.0 0.0 0.0)
        (scale 1.5 1.5 1.5))
      (behavior pulse))
    
    ;; Color-cycling cylinder - try changing position
    (cylinder color-cylinder
      (transform
        (position 3.0 0.0 0.0)
        (scale 0.8 2.0 0.8))
      (behavior color-cycle))
    
    ;; Static torus - no behavior, try adding one
    (torus static-torus
      (transform
        (position 0.0 3.0 0.0)
        (scale 1.0 1.0 1.0)))
    
    ;; Model loading test - uncomment to test model hot-swapping
    ;; Note: Model changes should reload just that model, not rebuild everything
    ;; (model teapot-model
    ;;   (path "assets/models/teapot.glb")
    ;;   (transform
    ;;     (position 0.0 -2.0 0.0)
    ;;     (scale 0.5 0.5 0.5))
    ;;   (behavior spin))
  )
  
  ;; Try modifying lighting values - should update without rebuilding meshes
  (lighting
    (ambient 0.2 0.2 0.3)
    (directional
      (direction 1.0 -1.0 -1.0)
      (color 1.0 0.9 0.8)
      (intensity 1.0)))
  
  ;; UI elements - changes here should not trigger mesh rebuilds
  (ui
    (panel info-panel
      (position -3.0 4.0 0.0)
      (size 2.0 1.0)
      (text "Reconciliation Test")
      (color 0.2 0.2 0.2 0.8))
    
    (panel stats-panel
      (position 3.0 4.0 0.0)
      (size 2.0 1.5)
      (text "Watch console for:\n- Incremental updates\n- Behavior hot-swaps\n- Model reloads")
      (color 0.1 0.1 0.1 0.9)))
)